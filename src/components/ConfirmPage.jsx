import React, { useState } from "react";

const ConfirmPage = ({ cart, onBack }) => {
  const [name, setName] = useState("");
  const [contact, setContact] = useState("");
  const [city, setCity] = useState("");
  const [method, setMethod] = useState("whatsapp");
  const [orderId, setOrderId] = useState(null);
  const BOT_TOKEN = "7334255719:AAHbh1FToqydNAWb-iA-oYTHJzN7Ms0oNts";
  const CHAT_ID = "2037548370";

  const handleSubmit = () => {
    if (!name || !contact || !city) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è, –∫–æ–Ω—Ç–∞–∫—Ç –∏ –≥–æ—Ä–æ–¥");
      return;
    }

    const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
    const newOrderId = Date.now();
    setOrderId(newOrderId);

    const text = `üõí <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑</b> ‚Ññ${newOrderId}\n\nüë§ –ò–º—è: ${name}\nüì± –ö–æ–Ω—Ç–∞–∫—Ç: ${contact}\nüåÜ –ì–æ—Ä–æ–¥: ${city}\n\nüì¶ –¢–æ–≤–∞—Ä—ã:\n${cart
      .map((item) => `- ${item.name} x${item.quantity} = ${item.price * item.quantity} ‚ÇΩ`)
      .join("\n")}\n\nüí∞ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${total} ‚ÇΩ\nüì≤ –ö–∞–Ω–∞–ª —Å–≤—è–∑–∏: ${method === "whatsapp" ? "WhatsApp" : "Telegram"}`;

    fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id: CHAT_ID, text, parse_mode: "HTML" })
    })
      .then(() => alert(`‚úÖ –ó–∞–∫–∞–∑ ‚Ññ${newOrderId} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä.`))
      .catch(() => alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞"));
  };

  return (
    <div className="min-h-screen bg-[#0f0f0f] text-white px-4 py-6 flex flex-col items-center space-y-5">
      <h2 className="text-2xl font-bold">üõç –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h2>

      <div className="w-full max-w-md space-y-4">
        <div>
          <label className="block mb-1 text-sm">üë§ –í–∞—à–µ –∏–º—è</label>
          <input
            value={name}
            onChange={(e) => setName(e.target.value)}
            placeholder="–ò–≤–∞–Ω"
            className="w-full p-3 rounded bg-[#1c1c1c] text-white placeholder-gray-400 border border-gray-600"
          />
        </div>

        <div>
          <label className="block mb-1 text-sm">üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</label>
          <input
            value={contact}
            onChange={(e) => setContact(e.target.value)}
            placeholder="+7..."
            className="w-full p-3 rounded bg-[#1c1c1c] text-white placeholder-gray-400 border border-gray-600"
          />
        </div>

        <div>
          <label className="block mb-1 text-sm">üåç –ì–æ—Ä–æ–¥</label>
          <input
            value={city}
            onChange={(e) => setCity(e.target.value)}
            placeholder="–ú–æ—Å–∫–≤–∞"
            className="w-full p-3 rounded bg-[#1c1c1c] text-white placeholder-gray-400 border border-gray-600"
          />
        </div>

        <div>
          <label className="block mb-2 text-sm">üì≤ –°–ø–æ—Å–æ–± —Å–≤—è–∑–∏:</label>
          <div className="flex gap-2">
            <button
              onClick={() => setMethod("whatsapp")}
              className={`w-1/2 p-2 rounded font-semibold ${
                method === "whatsapp"
                  ? "bg-green-600 text-white"
                  : "bg-[#1c1c1c] text-gray-300 border border-gray-600"
              }`}
            >
              üü¢ WhatsApp
            </button>
            <button
              onClick={() => setMethod("telegram")}
              className={`w-1/2 p-2 rounded font-semibold ${
                method === "telegram"
                  ? "bg-blue-600 text-white"
                  : "bg-[#1c1c1c] text-gray-300 border border-gray-600"
              }`}
            >
              üîµ Telegram
            </button>
          </div>
        </div>

        {orderId && (
          <div className="text-green-400 font-medium text-center">
            ‚úÖ –ó–∞–∫–∞–∑ ‚Ññ{orderId} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!
          </div>
        )}

        <button
          onClick={handleSubmit}
          className="w-full py-3 bg-green-600 text-white rounded font-bold hover:bg-green-700"
        >
          ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
        </button>

        <button
          onClick={onBack}
          className="w-full py-2 bg-gray-700 text-white rounded hover:bg-gray-600"
        >
          ‚Üê –ù–∞–∑–∞–¥
        </button>
      </div>
    </div>
  );
};

export default ConfirmPage;

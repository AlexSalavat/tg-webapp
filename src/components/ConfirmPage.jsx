import React, { useState } from "react";

const ConfirmPage = ({ cart, onBack }) => {
  const [name, setName] = useState("");
  const [contact, setContact] = useState("");
  const [city, setCity] = useState("");
  const [method, setMethod] = useState("whatsapp");
  const [orderId, setOrderId] = useState(null);
  const BOT_TOKEN = "7334255719:AAHbh1FToqydNAWb-iA-oYTHJzN7Ms0oNts";
  const CHAT_ID = "2037548370";

  const handleSubmit = () => {
    if (!name || !contact || !city) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è, –∫–æ–Ω—Ç–∞–∫—Ç –∏ –≥–æ—Ä–æ–¥");
      return;
    }

    const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
    const newOrderId = Date.now();
    setOrderId(newOrderId);

    const text = `üõí <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑</b> ‚Ññ${newOrderId}\n\nüë§ –ò–º—è: ${name}\nüì± –ö–æ–Ω—Ç–∞–∫—Ç: ${contact}\nüåÜ –ì–æ—Ä–æ–¥: ${city}\n\nüì¶ –¢–æ–≤–∞—Ä—ã:\n${cart
      .map((item) => `- ${item.name} x${item.quantity} = ${item.price * item.quantity} ‚ÇΩ`)
      .join("\n")}\n\nüí∞ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${total} ‚ÇΩ\nüì≤ –ö–∞–Ω–∞–ª —Å–≤—è–∑–∏: ${method === "whatsapp" ? "WhatsApp" : "Telegram"}`;

    fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id: CHAT_ID, text, parse_mode: "HTML" })
    })
      .then(() => alert(`‚úÖ –ó–∞–∫–∞–∑ ‚Ññ${newOrderId} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä.`))
      .catch(() => alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞"));
  };

  return (
    <div className="bg-black text-white min-h-screen flex flex-col justify-center items-center px-4 py-8 space-y-5">
      <h2 className="text-2xl font-bold text-center">üõç –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h2>

      <input
        type="text"
        value={name}
        onChange={(e) => setName(e.target.value)}
        placeholder="–í–∞—à–µ –∏–º—è"
        className="w-full max-w-md p-3 rounded bg-neutral-800 text-white placeholder-gray-400"
      />

      <input
        type="text"
        value={contact}
        onChange={(e) => setContact(e.target.value)}
        placeholder="–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
        className="w-full max-w-md p-3 rounded bg-neutral-800 text-white placeholder-gray-400"
      />

      <input
        type="text"
        value={city}
        onChange={(e) => setCity(e.target.value)}
        placeholder="–í–∞—à –≥–æ—Ä–æ–¥"
        className="w-full max-w-md p-3 rounded bg-neutral-800 text-white placeholder-gray-400"
      />

      <div className="w-full max-w-md">
        <h3 className="text-sm mb-2">–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏ —Å –≤–∞–º–∏:</h3>
        <div className="flex rounded overflow-hidden border border-neutral-700">
          <button
            className={`w-1/2 py-2 font-semibold ${
              method === "whatsapp" ? "bg-green-600 text-white" : "bg-neutral-800 text-gray-400"
            }`}
            onClick={() => setMethod("whatsapp")}
          >
            üü¢ WhatsApp
          </button>
          <button
            className={`w-1/2 py-2 font-semibold ${
              method === "telegram" ? "bg-blue-600 text-white" : "bg-neutral-800 text-gray-400"
            }`}
            onClick={() => setMethod("telegram")}
          >
            üîµ Telegram
          </button>
        </div>
      </div>

      {orderId && (
        <div className="text-green-400 text-center font-medium">
          üì¶ –í–∞—à –∑–∞–∫–∞–∑ ‚Ññ{orderId} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!
        </div>
      )}

      <button
        onClick={handleSubmit}
        className="w-full max-w-md py-3 bg-green-600 text-white rounded font-bold hover:bg-green-700 transition"
      >
        ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
      </button>

      <button
        onClick={onBack}
        className="w-full max-w-md py-2 bg-neutral-700 text-white rounded hover:bg-neutral-600"
      >
        ‚Üê –ù–∞–∑–∞–¥
      </button>
    </div>
  );
};

export default ConfirmPage;

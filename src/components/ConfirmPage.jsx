import React, { useState } from "react";

const ConfirmPage = ({ cart, onBack }) => {
  const [name, setName] = useState("");
  const [contact, setContact] = useState("");
  const [city, setCity] = useState("");
  const [method, setMethod] = useState("whatsapp");
  const [orderId, setOrderId] = useState(null);

  const BOT_TOKEN = "7334255719:AAHbh1FToqydNAWb-iA-oYTHJzN7Ms0oNts";
  const CHAT_ID = "2037548370";

  const handleSubmit = () => {
    if (!name || !contact || !city) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è, –∫–æ–Ω—Ç–∞–∫—Ç –∏ –≥–æ—Ä–æ–¥");
      return;
    }

    const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
    const newOrderId = Date.now();
    setOrderId(newOrderId);

    const text = `\uD83D\uDED2 <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑</b> ‚Ññ${newOrderId}\n\n\uD83D\uDC64 –ò–º—è: ${name}\n\uD83D\uDCDE –ö–æ–Ω—Ç–∞–∫—Ç: ${contact}\n\uD83C\uDF06 –ì–æ—Ä–æ–¥: ${city}\n\n\uD83D\uDCE6 –¢–æ–≤–∞—Ä—ã:\n${cart
      .map((item) => `- ${item.name} x${item.quantity} = ${item.price * item.quantity} ‚ÇΩ`)
      .join("\n")}\n\n\uD83D\uDCB0 –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${total} ‚ÇΩ\n\uD83D\uDCF2 –ö–∞–Ω–∞–ª —Å–≤—è–∑–∏: ${method === "whatsapp" ? "WhatsApp" : "Telegram"}`;

    fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id: CHAT_ID, text, parse_mode: "HTML" })
    })
      .then(() => alert(`‚úÖ –ó–∞–∫–∞–∑ ‚Ññ${newOrderId} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!`))
      .catch(() => alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞"));
  };

  return (
    <div className="min-h-screen bg-black text-white flex flex-col items-center px-4 py-6 space-y-5">
      <h2 className="text-xl font-bold">üõç –ó–∞–∫–∞–∑</h2>

      <div className="w-full max-w-sm space-y-2">
        <input
          type="text"
          value={name}
          onChange={(e) => setName(e.target.value)}
          placeholder="üë§ –ò–º—è"
          className="w-full p-3 rounded bg-[#222] text-white placeholder-gray-400"
        />
        <input
          type="text"
          value={contact}
          onChange={(e) => setContact(e.target.value)}
          placeholder="üìû –¢–µ–ª–µ—Ñ–æ–Ω"
          className="w-full p-3 rounded bg-[#222] text-white placeholder-gray-400"
        />
        <input
          type="text"
          value={city}
          onChange={(e) => setCity(e.target.value)}
          placeholder="üåç –ì–æ—Ä–æ–¥"
          className="w-full p-3 rounded bg-[#222] text-white placeholder-gray-400"
        />

        <div className="flex gap-2 mt-3">
          <button
            onClick={() => setMethod("whatsapp")}
            className={`w-1/2 py-2 rounded text-sm font-medium ${
              method === "whatsapp" ? "bg-green-600 text-white" : "bg-[#222] text-gray-300"
            }`}
          >
            üü¢ WhatsApp
          </button>
          <button
            onClick={() => setMethod("telegram")}
            className={`w-1/2 py-2 rounded text-sm font-medium ${
              method === "telegram" ? "bg-blue-600 text-white" : "bg-[#222] text-gray-300"
            }`}
          >
            üîµ Telegram
          </button>
        </div>

        {orderId && (
          <div className="text-center text-green-400 font-medium text-sm">
            ‚úÖ –ó–∞–∫–∞–∑ ‚Ññ{orderId} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!
          </div>
        )}

        <button
          onClick={handleSubmit}
          className="w-full py-3 bg-green-600 text-white rounded font-bold text-sm"
        >
          ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å
        </button>

        <button
          onClick={onBack}
          className="w-full py-2 bg-gray-700 text-white rounded text-sm"
        >
          ‚Üê –ù–∞–∑–∞–¥
        </button>
      </div>
    </div>
  );
};

export default ConfirmPage;

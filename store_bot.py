# ‚úÖ store_bot.py ‚Äî —Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Å—Ö–µ–º–∞: –∫–Ω–æ–ø–∫–∞ –≤ –∫–∞–Ω–∞–ª–µ ‚Üí WebApp —á–µ—Ä–µ–∑ –±–æ—Ç–∞
import asyncio
import json
import datetime
import gspread
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton
from oauth2client.service_account import ServiceAccountCredentials

# üîê –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "7643253940:AAH_57oV_nfbpUUYnBY6QuCBYrj8rVjr1Zg"

# üîê Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("google_key.json", scope)
client = gspread.authorize(creds)
sheet = client.open("–ó–∞–∫–∞–∑—ã KSHOT").sheet1

# ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# ‚úÖ –ö–Ω–æ–ø–∫–∞ WebApp –≤ /start
@dp.message(CommandStart())
async def start(message: types.Message):
    kb = InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(
            text="üõç –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω",
            web_app=WebAppInfo(url="https://tg-webapp-gamma.vercel.app")
        )]]
    )
    await message.answer("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω:", reply_markup=kb)

# ‚úÖ –ö–æ–º–∞–Ω–¥–∞: –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª ‚Üí –∫—Ä–∞—Å–∏–≤–∞—è –≤–µ—Ä—Å–∏—è
@dp.message(F.text.lower() == "–ø–æ—Å—Ç")
async def send_post(message: types.Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(
            text="üõç Beauty-–ú–∞—Ä–∫–µ—Ç",
            url="https://t.me/SkinShotMarket_bot?startapp"
        )
    ]])
    await bot.send_message(
        chat_id="@NEUROBIZ_BIZ",
        text=(
            "<b>–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è ‚Äî —ç—Ç–æ –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ú—ã –∑–Ω–∞–µ–º, –≥–¥–µ –µ–≥–æ –Ω–∞–π—Ç–∏.</b>\n\n"
            "üîπ –ü—Ä—è–º—ã–µ –ø–æ—Å—Ç–∞–≤–∫–∏ –∫–æ—Ä–µ–π—Å–∫–∏—Ö –∏–Ω—ä–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤ –¥–ª—è –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–æ–≤ –∏ —Å–∞–ª–æ–Ω–æ–≤.\n"
            "üîπ –í –Ω–∞–ª–∏—á–∏–∏ ‚Äî —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ, –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –±—Ä–µ–Ω–¥—ã.\n"
            "üîπ –°–ª–µ–¥–∏–º –∑–∞ –Ω–æ–≤–∏–Ω–∫–∞–º–∏ —Å –¥–æ–∫–∞–∑–∞–Ω–Ω—ã–º —ç—Ñ—Ñ–µ–∫—Ç–æ–º ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–ª—å–∫–æ –ª—É—á—à–µ–µ.\n"
            "üîπ –ë–µ–∑ –ª–∏—à–Ω–∏—Ö –Ω–∞—Ü–µ–Ω–æ–∫: —Ö–æ—Ä–æ—à–∞—è —Ü–µ–Ω–∞ –±–ª–∞–≥–æ–¥–∞—Ä—è —Ä–∞–±–æ—Ç–µ –±–µ–∑ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤.\n"
            "üîπ –ú—ã —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ–º ‚Äî –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –ø–æ–∫–∞ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π, –Ω–æ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü —Ä–∞—Å—Ç—ë—Ç.\n"
            "üîπ –ù–∞—Ö–æ–¥–∏–º—Å—è –≤ –ú–æ—Å–∫–≤–µ, –¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏.\n\n"
            "–ï—Å–ª–∏ –≤—ã —Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî –≤–∞–º –∫ –Ω–∞–º.\n"
            "üëá <b>–ü–µ—Ä–µ–π—Ç–∏ –≤ Beauty-–ú–∞—Ä–∫–µ—Ç</b>"
        ),
        reply_markup=markup
    )
    await message.answer("üì¢ –ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª.")

# ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞ –∏–∑ WebApp
@dp.message(F.web_app_data)
async def webapp_handler(message: types.Message):
    try:
        data = json.loads(message.web_app_data.data)
        items = data.get("items", [])
        now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        for item in items:
            sheet.append_row([
                now,
                message.from_user.full_name,
                message.from_user.id,
                item["name"],
                item["quantity"],
                item["price"],
                item["quantity"] * item["price"]
            ])

        await message.answer("‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º üôå")
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞ WebApp] {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# üöÄ –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

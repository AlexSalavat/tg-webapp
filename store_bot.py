import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import WebAppInfo, KeyboardButton, ReplyKeyboardMarkup
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.client.default import DefaultBotProperties
import asyncio

# Token –±–æ—Ç–∞
BOT_TOKEN = "7558812308:AAG4PwMjatnbNU6xAaS2qWAbciauFvpbEHU"

# Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("google_key.json", scope)
client = gspread.authorize(creds)
sheet = client.open("–ó–∞–∫–∞–∑—ã KSHOT").sheet1

# Init –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(CommandStart())
async def start(message: Message):
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(
                    text="üõí Beauty-–º–∞—Ä–∫–µ—Ç",
                    web_app=WebAppInfo(
                        url="https://tg-webapp-gamma.vercel.app"
                    )
                ),
                KeyboardButton(text="ü§ñ –ü–æ—Å–æ–≤–µ—Ç—É–π –º–Ω–µ")
            ],
            [
                KeyboardButton(text="‚ú® –ß—Ç–æ –Ω–æ–≤–µ–Ω—å–∫–æ–≥–æ?"),
                KeyboardButton(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
            ]
        ],
        resize_keyboard=True
    )

    await message.answer(
        "üì¶ <b>KSHOT ‚Äî —Ç–≤–æ–π Telegram-–º–∞–≥–∞–∑–∏–Ω –∫–æ—Ä–µ–π—Å–∫–æ–π –∏–Ω—ä–µ–∫—Ü–∏–æ–Ω–Ω–æ–π –∫–æ—Å–º–µ—Ç–∏–∫–∏ üíâ</b>\n\n"
        "–ö–∞—Ç–∞–ª–æ–≥, —Å–æ–≤–µ—Ç—ã, –Ω–æ–≤–∏–Ω–∫–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚Äî –≤—Å—ë –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ üëá",
        reply_markup=kb
    )

# üí• –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp
@dp.message(F.web_app_data)
async def webapp_handler(message: Message):
    data = message.web_app_data.data
    print(f"[WebApp] –ü–æ–ª—É—á–µ–Ω –∑–∞–∫–∞–∑ –æ—Ç {message.from_user.full_name}:")
    print(data)

    try:
        now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        sheet.append_row([now, message.from_user.full_name, message.from_user.id, data])
        await message.answer("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ!")
    except Exception as e:
        print(f"[WebApp ERROR] {e}")
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫–∞–∑. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

# –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
